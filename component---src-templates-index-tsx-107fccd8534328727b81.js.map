{"version":3,"sources":["webpack:///./src/components/pagination.tsx","webpack:///./src/templates/index.tsx"],"names":["config","autoAddCss","library","add","faAngleDoubleLeft","faAngleLeft","faAngleDoubleRight","faAngleRight","Pagenation","pageContext","previousPagePath","nextPagePath","humanPageNumber","numberOfPages","className","to","icon","pageQuery","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","map","post","frontmatter","fields","slug","key","itemScope","itemType","itemProp","date","tags","tag","dangerouslySetInnerHTML","__html","description","excerpt"],"mappings":"qNAOAA,IAAOC,YAAa,EACpBC,IAAQC,IAAIC,IAAmBC,IAAaC,IAAoBC,KAGhE,IAsCeC,EAtCI,SAAC,GAAoB,IAAlBC,EAAkB,EAAlBA,YACZC,EAAmED,EAAnEC,iBAAkBC,EAAiDF,EAAjDE,aAAcC,EAAmCH,EAAnCG,gBAAiBC,EAAkBJ,EAAlBI,cAMzD,OAEF,yBAAKC,UAAU,oCACX,yBAAKA,UAAU,sBAEM,IAApBF,EAAwB,kBAAC,OAAD,CAAMG,GAAI,IAAKD,UAAU,2FAClD,kBAAC,IAAD,CAAiBE,KAAMZ,OACb,yBAAKU,UAAU,2FAA0F,kBAAC,IAAD,CAAiBE,KAAMZ,OACvIM,EAAmB,kBAAC,OAAD,CAAMK,GAAIL,EAAkBI,UAAU,2FACxD,kBAAC,IAAD,CAAiBE,KAAMX,OACX,yBAAKS,UAAU,2FAA0F,kBAAC,IAAD,CAAiBE,KAAMX,OAE5I,yBAAKS,UAAU,kDACX,yBAAKA,UAAU,qEAAqEF,IAGzFD,EAAe,kBAAC,OAAD,CAAMI,GAAIJ,EAAcG,UAAU,2FAChD,kBAAC,IAAD,CAAiBE,KAAMT,OACX,yBAAKO,UAAU,2FAA0F,kBAAC,IAAD,CAAiBE,KAAMT,OAC/IK,IAAoBC,EAAgB,kBAAC,OAAD,CAAME,GAAI,IAAIF,EAAeC,UAAU,2FAC5E,kBAAC,IAAD,CAAiBE,KAAMV,OACb,yBAAKQ,UAAU,2FAA0F,kBAAC,IAAD,CAAiBE,KAAMV,U,wBCmCjIW,GAFEC,UAjEG,SAAC,GAAoC,MAAlCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUX,EAAkB,EAAlBA,YAC7BY,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,QACX,yLAUJ,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,QACX,wBAAIK,MAAO,CAAEC,UAAW,SACrBL,EAAMM,KAAI,SAAAC,GACT,IAAMR,EAAQQ,EAAKC,YAAYT,OAASQ,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,6BACErB,UAAU,iBACVuB,WAAS,EACTC,SAAS,6BAET,gCACE,4BACE,kBAAC,OAAD,CAAMvB,GAAIiB,EAAKE,OAAOC,KAAMI,SAAS,OACnC,0BAAMA,SAAS,YAAYf,KAG/B,+BAAQQ,EAAKC,YAAYO,MACxBR,EAAKC,YAAYQ,KAAKV,KAAI,SAACW,GAC1B,OACE,yBAAK5B,UAAU,mHAEZ4B,OAKT,iCACE,uBACEC,wBAAyB,CACvBC,OAAQZ,EAAKC,YAAYY,aAAeb,EAAKc,SAE/CP,SAAS,uBAQvB,kBAAC,EAAD,CAAY9B,YAAaA,MAON","file":"component---src-templates-index-tsx-107fccd8534328727b81.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\"\nimport { navigate } from \"gatsby\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { config, library } from \"@fortawesome/fontawesome-svg-core\"\nimport { faAngleDoubleLeft, faAngleLeft ,faAngleDoubleRight, faAngleRight } from \"@fortawesome/free-solid-svg-icons\"\n\nconfig.autoAddCss = false;\nlibrary.add(faAngleDoubleLeft, faAngleLeft ,faAngleDoubleRight, faAngleRight);\n\n\nconst Pagenation = ({ pageContext }) => {\n  const { previousPagePath, nextPagePath, humanPageNumber, numberOfPages } = pageContext;\n\n  const handleChange = (event, value) => {\n    value === 1 ? navigate(`/`) : navigate(`/${value}`);\n  };\n\n  return (\n\n<div className=\"flex flex-col items-center my-12\">\n    <div className=\"flex text-gray-700\">\n    \n    {humanPageNumber !== 1 ? <Link to={\"/\"} className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-200 cursor-pointer\">\n    <FontAwesomeIcon icon={faAngleDoubleLeft}/>\n    </Link> : <div className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-200 cursor-pointer\"><FontAwesomeIcon icon={faAngleDoubleLeft}/></div>}\n      {previousPagePath ? <Link to={previousPagePath} className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-200 cursor-pointer\">\n        <FontAwesomeIcon icon={faAngleLeft}/>\n          </Link> : <div className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-200 cursor-pointer\"><FontAwesomeIcon icon={faAngleLeft}/></div> }\n        \n        <div className=\"flex h-12 font-medium rounded-full bg-gray-200\">\n            <div className=\"w-12 flex justify-center items-center cursor-pointer rounded-full\">{humanPageNumber}</div>\n        </div>\n      \n      {nextPagePath ? <Link to={nextPagePath} className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-200 cursor-pointer\">\n        <FontAwesomeIcon icon={faAngleRight}/>\n          </Link> : <div className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-200 cursor-pointer\"><FontAwesomeIcon icon={faAngleRight}/></div> }\n    {humanPageNumber !== numberOfPages ? <Link to={\"/\"+numberOfPages} className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-200 cursor-pointer\">\n    <FontAwesomeIcon icon={faAngleDoubleRight}/>\n    </Link> : <div className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-200 cursor-pointer\"><FontAwesomeIcon icon={faAngleDoubleRight}/></div>}\n    </div>\n</div> \n\n    // <div>\n    //  {previousPagePath ? <Link to={previousPagePath}>前のページ</Link> : null }\n\t\t//  {nextPagePath ? <Link to={nextPagePath}>次のページ</Link> : null }\n    // </div>\n  );\n};\nexport default Pagenation;","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Pagenation from \"../components/pagination\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogIndex = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"TOP\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"TOP\" />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug}>\n              <article\n                className=\"post-list-item\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <header>\n                  <h2>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </h2>\n                  <small>{post.frontmatter.date}</small>\n                  {post.frontmatter.tags.map((tag) => {\n                    return (\n                      <div className=\"ml-4 text-xs inline-flex items-center font-bold leading-sm px-3 py-1 rounded-full bg-white text-gray-700 border\"\n                      >\n                        {tag}\n                      </div>\n                    )\n                  })}\n                </header>\n                <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section>\n              </article>\n            </li>\n          )\n        })}\n      </ol>\n      <Pagenation pageContext={pageContext} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!)  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }\n      skip: $skip\n      limit: $limit\n      ) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY-MM-DD\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}