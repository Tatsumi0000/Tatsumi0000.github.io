{"version":3,"sources":["webpack:///./src/templates/blog-post.tsx"],"names":["config","autoAddCss","library","add","faClock","faSync","BlogPostTemplate","data","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","date","frontmatter","modifiedDate","modified_date","tableOfContents","description","excerpt","className","itemScope","itemType","itemProp","icon","dangerouslySetInnerHTML","__html","html","style","display","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"2FAAA,kJAUAA,IAAOC,YAAa,EACpBC,IAAQC,IAAIC,IAASC,KAiENC,UA/DU,SAAC,GAAuB,MAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC1BC,EAAOF,EAAKG,eACZC,GAAY,UAAAJ,EAAKK,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KACZC,EAAOR,EAAKS,YAAYD,KACxBE,EAAeV,EAAKS,YAAYE,cAChCC,EAAkBd,EAAKG,eAAeW,gBAE5C,OACE,kBAAC,IAAD,CAAQb,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKS,YAAYJ,MACxBQ,YAAab,EAAKS,YAAYI,aAAeb,EAAKc,UAEpD,6BACEC,UAAU,YACVC,WAAS,EACTC,SAAS,6BAET,gCACE,wBAAIC,SAAS,YAAYlB,EAAKS,YAAYJ,OACzB,MAAhBK,EAAuB,2BAAG,kBAAC,IAAD,CAAiBS,KAAMxB,MAA1B,IAAsCa,GAAY,2BAAG,kBAAC,IAAD,CAAiBW,KAAMxB,MAA1B,IAAsCa,EAAtC,IAA4C,kBAAC,IAAD,CAAiBW,KAAMvB,MAAnE,IAA8Ec,IAE1J,yBACIK,UAAU,mBACVK,wBAAyB,CAAEC,OAAQT,KAEvC,6BACEG,UAAU,WACVK,wBAAyB,CAAEC,OAAQrB,EAAKsB,SAG5C,yBAAKP,UAAU,iBACb,wBACEQ,MAAO,CACLC,QAAS,OACTC,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,4BACGtB,GACC,kBAAC,OAAD,CAAMuB,GAAIvB,EAASwB,OAAOC,KAAMC,IAAI,QAApC,KACK1B,EAASG,YAAYJ,QAK9B,4BACGE,GACC,kBAAC,OAAD,CAAMsB,GAAItB,EAAKuB,OAAOC,KAAMC,IAAI,QAC7BzB,EAAKE,YAAYJ,MADpB,WAaP,IAAM4B,EAAY","file":"component---src-templates-blog-post-tsx-a0efeb892615ac8f0aff.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { config, library } from \"@fortawesome/fontawesome-svg-core\"\nimport { faClock, faSync } from \"@fortawesome/free-solid-svg-icons\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconfig.autoAddCss = false;\nlibrary.add(faClock, faSync);\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n  const date = post.frontmatter.date;\n  const modifiedDate = post.frontmatter.modified_date;\n  const tableOfContents = data.markdownRemark.tableOfContents;\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article\n        className=\"blog-post\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n        <header>\n          <h1 itemProp=\"headline\">{post.frontmatter.title}</h1>\n          {modifiedDate == null ? <p><FontAwesomeIcon icon={faClock}/> {date}</p> : <p><FontAwesomeIcon icon={faClock}/> {date} <FontAwesomeIcon icon={faSync}/> {modifiedDate}</p>}\n        </header>\n        <div\n            className=\"table-of-content\"\n            dangerouslySetInnerHTML={{ __html: tableOfContents }}\n        />\n        <section\n          className=\"markdown\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n      </article>\n      <nav className=\"blog-post-nav\">\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          \n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents(\n        absolute: false\n        pathToSlugField: \"frontmatter.path\"\n        maxDepth: 2\n      )\n      frontmatter {\n        title\n        date(formatString: \"YYYY-MM-DD\")\n        modified_date(formatString: \"YYYY-MM-DD\")\n        description\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}